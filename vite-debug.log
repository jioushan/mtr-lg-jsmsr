2025-02-02T08:47:24.828Z vite:config bundled config file loaded in 100.15ms
2025-02-02T08:47:24.881Z vite:config using resolved config: {
  plugins: [
    'vite:optimized-deps',
    'vite:watch-package-data',
    'vite:pre-alias',
    'alias',
    'vite:react-babel',
    'vite:react-refresh',
    'vite:modulepreload-polyfill',
    'vite:resolve',
    'vite:html-inline-proxy',
    'vite:css',
    'vite:esbuild',
    'vite:json',
    'vite:wasm-helper',
    'vite:worker',
    'vite:asset',
    'vite:wasm-fallback',
    'vite:define',
    'vite:css-post',
    'vite:worker-import-meta-url',
    'vite:asset-import-meta-url',
    'vite:dynamic-import-vars',
    'vite:import-glob',
    'vite:client-inject',
    'vite:css-analysis',
    'vite:import-analysis'
  ],
  css: {
    transformer: 'postcss',
    preprocessorMaxWorkers: 0,
    devSourcemap: false,
    postcss: 'postcss.config.mjs',
    lightningcss: undefined
  },
  optimizeDeps: {
    include: [
      'react',
      'react-dom',
      'react/jsx-dev-runtime',
      'react/jsx-runtime'
    ],
    exclude: [],
    needsInterop: [],
    extensions: [],
    disabled: undefined,
    holdUntilCrawlEnd: true,
    force: false,
    noDiscovery: false,
    esbuildOptions: { preserveSymlinks: false, jsx: 'automatic' }
  },
  server: {
    port: 5173,
    strictPort: false,
    host: undefined,
    allowedHosts: [],
    https: undefined,
    open: false,
    proxy: undefined,
    cors: {
      origin: /^https?:\/\/(?:(?:[^:]+\.)?localhost|127\.0\.0\.1|\[::1\])(?::\d+)?$/
    },
    headers: {},
    warmup: { clientFiles: [], ssrFiles: [] },
    middlewareMode: false,
    fs: {
      strict: true,
      deny: [ '.env', '.env.*', '*.{crt,pem}', '**/.git/**' ],
      allow: [ '/root/my-lookingglass' ]
    },
    preTransformRequests: true,
    perEnvironmentStartEndDuringDev: false,
    sourcemapIgnoreList: [Function: isInNodeModules$1]
  },
  esbuild: { jsxDev: true, jsx: 'automatic', jsxImportSource: undefined },
  build: {
    target: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
    polyfillModulePreload: true,
    modulePreload: { polyfill: true },
    outDir: 'dist',
    assetsDir: 'assets',
    assetsInlineLimit: 4096,
    sourcemap: false,
    terserOptions: {},
    rollupOptions: { onwarn: [Function: onwarn] },
    commonjsOptions: { include: [ /node_modules/ ], extensions: [ '.js', '.cjs' ] },
    dynamicImportVarsOptions: { warnOnError: true, exclude: [ /node_modules/ ] },
    write: true,
    emptyOutDir: null,
    copyPublicDir: true,
    manifest: false,
    lib: false,
    ssrManifest: false,
    ssrEmitAssets: false,
    reportCompressedSize: true,
    chunkSizeWarningLimit: 500,
    watch: null,
    cssCodeSplit: true,
    minify: 'esbuild',
    ssr: false,
    emitAssets: false,
    createEnvironment: [Function: createEnvironment],
    cssTarget: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
    cssMinify: true
  },
  resolve: {
    externalConditions: [ 'node' ],
    extensions: [ '.mjs', '.js', '.ts', '.jsx', '.tsx', '.json' ],
    dedupe: [ 'react', 'react-dom' ],
    noExternal: [],
    external: [],
    preserveSymlinks: false,
    alias: [
      {
        find: /^\/?@vite\/env/,
        replacement: '/@fs/root/my-lookingglass/node_modules/vite/dist/client/env.mjs'
      },
      {
        find: /^\/?@vite\/client/,
        replacement: '/@fs/root/my-lookingglass/node_modules/vite/dist/client/client.mjs'
      }
    ],
    mainFields: [ 'browser', 'module', 'jsnext:main', 'jsnext' ],
    conditions: [ 'module', 'browser', 'development|production' ],
    enableBuiltinNoExternalCheck: false
  },
  environments: {
    client: {
      define: undefined,
      resolve: {
        externalConditions: [ 'node' ],
        extensions: [ '.mjs', '.js', '.ts', '.jsx', '.tsx', '.json' ],
        dedupe: [ 'react', 'react-dom' ],
        noExternal: [],
        external: [],
        preserveSymlinks: false,
        alias: [
          {
            find: /^\/?@vite\/env/,
            replacement: '/@fs/root/my-lookingglass/node_modules/vite/dist/client/env.mjs'
          },
          {
            find: /^\/?@vite\/client/,
            replacement: '/@fs/root/my-lookingglass/node_modules/vite/dist/client/client.mjs'
          }
        ],
        mainFields: [ 'browser', 'module', 'jsnext:main', 'jsnext' ],
        conditions: [ 'module', 'browser', 'development|production' ],
        enableBuiltinNoExternalCheck: false
      },
      keepProcessEnv: false,
      consumer: 'client',
      optimizeDeps: {
        include: [
          'react',
          'react-dom',
          'react/jsx-dev-runtime',
          'react/jsx-runtime'
        ],
        exclude: [],
        needsInterop: [],
        extensions: [],
        disabled: undefined,
        holdUntilCrawlEnd: true,
        force: false,
        noDiscovery: false,
        esbuildOptions: { preserveSymlinks: false, jsx: 'automatic' }
      },
      dev: {
        warmup: [],
        sourcemap: { js: true },
        sourcemapIgnoreList: [Function: isInNodeModules$1],
        preTransformRequests: true,
        createEnvironment: [Function: defaultCreateClientDevEnvironment],
        recoverable: true,
        moduleRunnerTransform: false
      },
      build: {
        target: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
        polyfillModulePreload: true,
        modulePreload: { polyfill: true },
        outDir: 'dist',
        assetsDir: 'assets',
        assetsInlineLimit: 4096,
        sourcemap: false,
        terserOptions: {},
        rollupOptions: { onwarn: [Function: onwarn] },
        commonjsOptions: { include: [ /node_modules/ ], extensions: [ '.js', '.cjs' ] },
        dynamicImportVarsOptions: { warnOnError: true, exclude: [ /node_modules/ ] },
        write: true,
        emptyOutDir: null,
        copyPublicDir: true,
        manifest: false,
        lib: false,
        ssrManifest: false,
        ssrEmitAssets: false,
        reportCompressedSize: true,
        chunkSizeWarningLimit: 500,
        watch: null,
        cssCodeSplit: true,
        minify: 'esbuild',
        ssr: false,
        emitAssets: true,
        createEnvironment: [Function: createEnvironment],
        cssTarget: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
        cssMinify: true
      }
    },
    ssr: {
      define: undefined,
      resolve: {
        externalConditions: [ 'node' ],
        extensions: [ '.mjs', '.js', '.ts', '.jsx', '.tsx', '.json' ],
        dedupe: [ 'react', 'react-dom' ],
        noExternal: [],
        external: [],
        preserveSymlinks: false,
        alias: [
          {
            find: /^\/?@vite\/env/,
            replacement: '/@fs/root/my-lookingglass/node_modules/vite/dist/client/env.mjs'
          },
          {
            find: /^\/?@vite\/client/,
            replacement: '/@fs/root/my-lookingglass/node_modules/vite/dist/client/client.mjs'
          }
        ],
        mainFields: [ 'module', 'jsnext:main', 'jsnext' ],
        conditions: [ 'module', 'node', 'development|production' ],
        enableBuiltinNoExternalCheck: false
      },
      keepProcessEnv: true,
      consumer: 'server',
      optimizeDeps: {
        include: [],
        exclude: [],
        needsInterop: [],
        extensions: [],
        disabled: undefined,
        holdUntilCrawlEnd: true,
        force: false,
        noDiscovery: true,
        esbuildOptions: { preserveSymlinks: false }
      },
      dev: {
        warmup: [],
        sourcemap: { js: true },
        sourcemapIgnoreList: [Function: isInNodeModules$1],
        preTransformRequests: false,
        createEnvironment: [Function: defaultCreateDevEnvironment],
        recoverable: false,
        moduleRunnerTransform: true
      },
      build: {
        target: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
        polyfillModulePreload: true,
        modulePreload: { polyfill: true },
        outDir: 'dist',
        assetsDir: 'assets',
        assetsInlineLimit: 4096,
        sourcemap: false,
        terserOptions: {},
        rollupOptions: { onwarn: [Function: onwarn] },
        commonjsOptions: { include: [ /node_modules/ ], extensions: [ '.js', '.cjs' ] },
        dynamicImportVarsOptions: { warnOnError: true, exclude: [ /node_modules/ ] },
        write: true,
        emptyOutDir: null,
        copyPublicDir: true,
        manifest: false,
        lib: false,
        ssrManifest: false,
        ssrEmitAssets: false,
        reportCompressedSize: true,
        chunkSizeWarningLimit: 500,
        watch: null,
        cssCodeSplit: true,
        minify: false,
        ssr: true,
        emitAssets: false,
        createEnvironment: [Function: createEnvironment],
        cssTarget: [ 'es2020', 'edge88', 'firefox78', 'chrome87', 'safari14' ],
        cssMinify: 'esbuild'
      }
    }
  },
  configFile: '/root/my-lookingglass/vite.config.ts',
  configFileDependencies: [ '/root/my-lookingglass/vite.config.ts' ],
  inlineConfig: {
    root: undefined,
    base: undefined,
    mode: undefined,
    configFile: undefined,
    logLevel: undefined,
    clearScreen: undefined,
    optimizeDeps: { force: undefined },
    server: { host: undefined }
  },
  root: '/root/my-lookingglass',
  base: '/',
  decodedBase: '/',
  rawBase: '/',
  publicDir: '/root/my-lookingglass/public',
  cacheDir: '/root/my-lookingglass/node_modules/.vite',
  command: 'serve',
  mode: 'development',
  isWorker: false,
  mainConfig: null,
  bundleChain: [],
  isProduction: false,
  json: { namedExports: true, stringify: 'auto' },
  builder: undefined,
  preview: {
    port: 4173,
    strictPort: false,
    host: undefined,
    allowedHosts: [],
    https: undefined,
    open: false,
    proxy: undefined,
    cors: {
      origin: /^https?:\/\/(?:(?:[^:]+\.)?localhost|127\.0\.0\.1|\[::1\])(?::\d+)?$/
    },
    headers: {}
  },
  envDir: '/root/my-lookingglass',
  env: { BASE_URL: '/', MODE: 'development', DEV: true, PROD: false },
  assetsInclude: [Function: assetsInclude],
  logger: {
    hasWarned: false,
    info: [Function: info],
    warn: [Function: warn],
    warnOnce: [Function: warnOnce],
    error: [Function: error],
    clearScreen: [Function: clearScreen],
    hasErrorLogged: [Function: hasErrorLogged]
  },
  packageCache: Map(1) {
    'fnpd_/root/my-lookingglass' => {
      dir: '/root/my-lookingglass',
      data: {
        name: 'my-lookingglass',
        private: true,
        version: '0.0.0',
        type: 'module',
        scripts: {
          dev: 'vite --host',
          debug: 'vite --debug > vite-debug.log 2>&1',
          build: 'tsc -b && vite build',
          lint: 'eslint .',
          preview: 'vite preview'
        },
        dependencies: { react: '^18.3.1', 'react-dom': '^18.3.1' },
        devDependencies: {
          '@eslint/js': '^9.17.0',
          '@types/react': '^18.3.18',
          '@types/react-dom': '^18.3.5',
          '@vitejs/plugin-react': '^4.3.4',
          autoprefixer: '^10.4.20',
          eslint: '^9.17.0',
          'eslint-plugin-react-hooks': '^5.0.0',
          'eslint-plugin-react-refresh': '^0.4.16',
          globals: '^15.14.0',
          postcss: '^8.5.1',
          tailwindcss: '^4.0.3',
          typescript: '~5.6.2',
          'typescript-eslint': '^8.18.2',
          vite: '^6.0.11'
        }
      },
      hasSideEffects: [Function: hasSideEffects],
      setResolvedCache: [Function: setResolvedCache],
      getResolvedCache: [Function: getResolvedCache]
    },
    set: [Function (anonymous)]
  },
  worker: { format: 'iife', plugins: '() => plugins', rollupOptions: {} },
  appType: 'spa',
  experimental: { importGlobRestoreExtension: false, hmrPartialAccept: false },
  future: undefined,
  ssr: {
    target: 'node',
    optimizeDeps: {
      esbuildOptions: { preserveSymlinks: false },
      include: [],
      exclude: [],
      needsInterop: [],
      extensions: [],
      holdUntilCrawlEnd: true,
      force: false,
      noDiscovery: true
    },
    external: [],
    noExternal: [],
    resolve: {
      conditions: [ 'module', 'node', 'development|production' ],
      externalConditions: [ 'node' ]
    }
  },
  dev: {
    warmup: [],
    sourcemap: { js: true },
    sourcemapIgnoreList: [Function: isInNodeModules$1],
    preTransformRequests: false,
    createEnvironment: [Function: defaultCreateDevEnvironment],
    recoverable: false,
    moduleRunnerTransform: false
  },
  webSocketToken: '5AIxrI5OvWN9',
  getSortedPlugins: [Function: getSortedPlugins],
  getSortedPluginHooks: [Function: getSortedPluginHooks],
  createResolver: [Function: createResolver],
  fsDenyGlob: [Function: arrayMatcher],
  safeModulePaths: Set(0) {},
  additionalAllowedHosts: []
}
2025-02-02T08:47:24.968Z vite:deps Hash is consistent. Skipping. Use --force to override.

  VITE v6.0.11  ready in 621 ms

  ➜  Local:   http://localhost:5173/
  ➜  Network: use --host to expose
  ➜  press h + enter to show help
2025-02-02T08:47:24.991Z vite:hmr [file change] vite-debug.log
2025-02-02T08:47:24.993Z vite:hmr (client) [no modules matched] vite-debug.log
2025-02-02T08:47:24.993Z vite:hmr (ssr) [no modules matched] vite-debug.log
